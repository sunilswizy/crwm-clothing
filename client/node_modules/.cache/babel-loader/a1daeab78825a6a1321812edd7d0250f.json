{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\Crow Clothing\\\\crwn-clothing\\\\src\\\\components\\\\shop-list\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionsPage from '../../pages/collections/collections.component';\nimport fetchCollectionsAsync from '../../redux/shop/shop.actions';\nimport { selectFetching } from '../../redux/shop/shop.selector';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionsPageWithSpinner = WithSpinner(CollectionsPage);\n_c2 = CollectionsPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unSubscribeFromShapshop = null;\n  }\n\n  componentDidMount() {\n    const {\n      fetchCollections\n    } = this.props;\n    fetchCollectionsAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isFetching\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-list\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsPageWithSpinner, {\n          isLoading: isFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollection: () => dispatch(fetchCollectionsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionsPageWithSpinner\");","map":{"version":3,"sources":["E:/react/Crow Clothing/crwn-clothing/src/components/shop-list/shop.component.jsx"],"names":["React","Route","createStructuredSelector","CollectionsOverview","CollectionsPage","fetchCollectionsAsync","selectFetching","connect","WithSpinner","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","unSubscribeFromShapshop","componentDidMount","fetchCollections","props","render","match","isFetching","path","mapStateToProps","mapDispatchToProps","dispatch","updateCollection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,eAAP,MAA4B,+CAA5B;AAEA,OAAOC,qBAAP,MAAkC,+BAAlC;AAEA,SAASC,cAAT,QAA+B,gCAA/B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,wCAAxB;;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;KAAMM,8B;AACN,MAAMC,0BAA0B,GAAGF,WAAW,CAACJ,eAAD,CAA9C;MAAMM,0B;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAElCC,uBAFkC,GAER,IAFQ;AAAA;;AAIlCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACC,MAAAA;AAAD,QAAqB,KAAKC,KAAhC;AACAX,IAAAA,qBAAqB;AAExB;;AAEDY,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAsB,KAAKH,KAAjC;AACJ,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AACA,QAAA,MAAM,EACDJ,KAAD,iBAAW,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEG,UAA3C;AAAA,aAA2DH;AAA3D;AAAA;AAAA;AAAA;AAAA;AAFf;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AACA,QAAA,MAAM,EACDJ,KAAD,iBAAW,QAAC,0BAAD;AAA4B,UAAA,SAAS,EAAEG,UAAvC;AAAA,aAAuDH;AAAvD;AAAA;AAAA;AAAA;AAAA;AAFf;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAYE;;AAxBgC;;AA2BtC,MAAMK,eAAe,GAAGnB,wBAAwB,CAAC;AAC7CiB,EAAAA,UAAU,EAAEb;AADiC,CAAD,CAAhD;;AAIA,MAAMgB,kBAAkB,GAAIC,QAAQ,KAAM;AACtCC,EAAAA,gBAAgB,EAAE,MAAMD,QAAQ,CAAClB,qBAAqB,EAAtB;AADM,CAAN,CAApC;;AAIA,eAAeE,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\n\r\nimport { createStructuredSelector } from 'reselect';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionsPage from '../../pages/collections/collections.component';\r\n\r\nimport fetchCollectionsAsync from '../../redux/shop/shop.actions'\r\n\r\nimport { selectFetching } from '../../redux/shop/shop.selector';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\r\nconst CollectionsPageWithSpinner = WithSpinner(CollectionsPage)\r\n\r\nclass ShopPage extends React.Component{\r\n\r\n    unSubscribeFromShapshop = null;\r\n\r\n    componentDidMount(){\r\n        const {fetchCollections} = this.props\r\n        fetchCollectionsAsync()\r\n\r\n    }\r\n\r\n    render(){ \r\n        const {match, isFetching} = this.props\r\n    return(\r\n    <div className=\"shop-list\">\r\n        <Route exact path={`${match.path}`} \r\n        render = {\r\n            (props) => <CollectionsOverviewWithSpinner isLoading={isFetching} {...props}/>\r\n            }/>\r\n        <Route path={`${match.path}/:collectionId`} \r\n        render = {\r\n            (props) => <CollectionsPageWithSpinner isLoading={isFetching} {...props}/>\r\n        }\r\n        />\r\n    </div>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isFetching: selectFetching\r\n})\r\n\r\nconst mapDispatchToProps =  dispatch  => ({\r\n    updateCollection: () => dispatch(fetchCollectionsAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}