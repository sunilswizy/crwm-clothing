{"ast":null,"code":"import { FECTCH_COLLECTION } from \"./shop.types\";\nimport { firestore } from \"../../firebase/firebase.utill\";\nimport { convertCollectionSnapshotToMap } from \"../../firebase/firebase.utill\";\n\nconst fetchCollectionRequest = () => ({\n  type: FECTCH_COLLECTION.FETCH_COLLECTIONS_REQUEST\n});\n\nconst fetchCollectionSuccess = collection => ({\n  type: FECTCH_COLLECTION.FETCH_COLLECTION_SUCCESS,\n  payload: collection\n});\n\nconst fetchCollectionFailure = errMsg => ({\n  type: FECTCH_COLLECTION.FETCH_COLLECTION_FAILURE,\n  payload: errMsg\n});\n\nconst fetchCollectionsAsync = () => {\n  return dispatch => {\n    const colletionRef = firestore.collection('collections');\n    dispatch(fetchCollectionRequest());\n    colletionRef.get().then(snapShot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapShot);\n      dispatch(fetchCollectionSuccess(collectionMap));\n    }).catch(errMsg => {\n      dispatch(fetchCollectionFailure(errMsg.message));\n    });\n  };\n};\n\nexport default fetchCollectionsAsync;","map":{"version":3,"sources":["E:/react/Crow Clothing/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["FECTCH_COLLECTION","firestore","convertCollectionSnapshotToMap","fetchCollectionRequest","type","FETCH_COLLECTIONS_REQUEST","fetchCollectionSuccess","collection","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionFailure","errMsg","FETCH_COLLECTION_FAILURE","fetchCollectionsAsync","dispatch","colletionRef","get","then","snapShot","collectionMap","catch","message"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,cAAlC;AAEA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,8BAAT,QAA+C,+BAA/C;;AAGA,MAAMC,sBAAsB,GAAG,OAAO;AAC9BC,EAAAA,IAAI,EAAGJ,iBAAiB,CAACK;AADK,CAAP,CAA/B;;AAIA,MAAMC,sBAAsB,GAAIC,UAAD,KAAiB;AACxCH,EAAAA,IAAI,EAAEJ,iBAAiB,CAACQ,wBADgB;AAExCC,EAAAA,OAAO,EAAEF;AAF+B,CAAjB,CAA/B;;AAKA,MAAMG,sBAAsB,GAAIC,MAAD,KAAa;AACpCP,EAAAA,IAAI,EAAEJ,iBAAiB,CAACY,wBADY;AAEpCH,EAAAA,OAAO,EAAEE;AAF2B,CAAb,CAA/B;;AAMA,MAAME,qBAAqB,GAAG,MAAM;AAC5B,SAAOC,QAAQ,IAAI;AAEnB,UAAMC,YAAY,GAAGd,SAAS,CAACM,UAAV,CAAqB,aAArB,CAArB;AACAO,IAAAA,QAAQ,CAACX,sBAAsB,EAAvB,CAAR;AAGAY,IAAAA,YAAY,CAACC,GAAb,GAAmBC,IAAnB,CACIC,QAAQ,IAAI;AACR,YAAMC,aAAa,GAAGjB,8BAA8B,CAACgB,QAAD,CAApD;AACCJ,MAAAA,QAAQ,CAACR,sBAAsB,CAACa,aAAD,CAAvB,CAAR;AACJ,KAJL,EAKEC,KALF,CAKST,MAAM,IAAI;AACVG,MAAAA,QAAQ,CAACJ,sBAAsB,CAACC,MAAM,CAACU,OAAR,CAAvB,CAAR;AACP,KAPF;AAQC,GAdD;AAeP,CAhBD;;AAoBA,eAAeR,qBAAf","sourcesContent":["import { FECTCH_COLLECTION } from \"./shop.types\"\r\n\r\nimport { firestore } from \"../../firebase/firebase.utill\"\r\nimport { convertCollectionSnapshotToMap } from \"../../firebase/firebase.utill\"\r\n\r\n\r\nconst fetchCollectionRequest = () => ({\r\n        type : FECTCH_COLLECTION.FETCH_COLLECTIONS_REQUEST\r\n})\r\n\r\nconst fetchCollectionSuccess = (collection) => ({\r\n        type: FECTCH_COLLECTION.FETCH_COLLECTION_SUCCESS,\r\n        payload: collection\r\n})\r\n\r\nconst fetchCollectionFailure = (errMsg) => ({\r\n        type: FECTCH_COLLECTION.FETCH_COLLECTION_FAILURE,\r\n        payload: errMsg\r\n})\r\n\r\n\r\nconst fetchCollectionsAsync = () => {\r\n        return dispatch => {\r\n\r\n        const colletionRef = firestore.collection('collections')\r\n        dispatch(fetchCollectionRequest())\r\n\r\n\r\n        colletionRef.get().then(\r\n            snapShot => {\r\n                const collectionMap = convertCollectionSnapshotToMap(snapShot)\r\n                 dispatch(fetchCollectionSuccess(collectionMap)) \r\n            })\r\n         .catch( errMsg => {\r\n                 dispatch(fetchCollectionFailure(errMsg.message))\r\n         })      \r\n        }\r\n} \r\n\r\n\r\n\r\nexport default fetchCollectionsAsync"]},"metadata":{},"sourceType":"module"}