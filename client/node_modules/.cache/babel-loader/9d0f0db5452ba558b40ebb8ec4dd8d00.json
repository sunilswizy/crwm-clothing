{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBcpWxqkvH2By2x-AadqANXHX7uDkY6FNU\",\n  authDomain: \"crwn-clothing-93193.firebaseapp.com\",\n  projectId: \"crwn-clothing-93193\",\n  storageBucket: \"crwn-clothing-93193.appspot.com\",\n  messagingSenderId: \"99688462988\",\n  appId: \"1:99688462988:web:abaadddf8df345ebd1d9a9\",\n  measurementId: \"G-5VQG2TMBXY\"\n};\nexport const createUserProfileDocument = async (userAuth, additionaldata) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdat = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdat,\n        ...additionaldata\n      });\n    } catch (error) {\n      console.log(\"Error creating user \" + error);\n    }\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["E:/react/Crow Clothing/crwn-clothing/src/firebase/firebase.utill.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionaldata","userRef","firestore","doc","uid","snapShot","get","console","log","exists","displayName","email","createdat","Date","set","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,qCAFH;AAGTC,EAAAA,SAAS,EAAE,qBAHF;AAITC,EAAAA,aAAa,EAAE,iCAJN;AAKTC,EAAAA,iBAAiB,EAAE,aALV;AAMTC,EAAAA,KAAK,EAAE,0CANE;AAOTC,EAAAA,aAAa,EAAE;AAPN,CAAb;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAkC;AACvE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAIC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAjB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,MAAG,CAACA,QAAQ,CAACI,MAAb,EAAoB;AAClB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBZ,QAA7B;AACA,UAAMa,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACD,YAAMZ,OAAO,CAACa,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGZ;AAJa,OAAZ,CAAN;AAOD,KARD,CASA,OAAMe,KAAN,EAAY;AACRR,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAuBO,KAAnC;AACH;AAGF;AACJ,CA5BM;AA8BP1B,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB;AAEA,OAAO,MAAM2B,IAAI,GAAG5B,QAAQ,CAAC4B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMgB,QAAQ,GAAG,IAAI7B,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAE,MAAKL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA7B;AAEP,eAAe7B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyBcpWxqkvH2By2x-AadqANXHX7uDkY6FNU\",\r\n    authDomain: \"crwn-clothing-93193.firebaseapp.com\",\r\n    projectId: \"crwn-clothing-93193\",\r\n    storageBucket: \"crwn-clothing-93193.appspot.com\",\r\n    messagingSenderId: \"99688462988\",\r\n    appId: \"1:99688462988:web:abaadddf8df345ebd1d9a9\",\r\n    measurementId: \"G-5VQG2TMBXY\"\r\n  };\r\n\r\n\r\n  export const createUserProfileDocument = async (userAuth, additionaldata)=>{\r\n      if(!userAuth) return;\r\n\r\n      const userRef =  firestore.doc(`users/${userAuth.uid}`)\r\n\r\n      const snapShot = await userRef.get();\r\n\r\n      console.log(snapShot)\r\n\r\n      if(!snapShot.exists){\r\n        const {displayName, email} = userAuth;\r\n        const createdat = new Date();\r\n\r\n        try{\r\n          await userRef.set({\r\n            displayName,\r\n            email,\r\n            createdat,\r\n            ...additionaldata\r\n          })\r\n            \r\n        }\r\n        catch(error){\r\n            console.log(\"Error creating user \"+error)\r\n        }\r\n\r\n\r\n      }\r\n  }\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt: 'select_account' });\r\n  export const signInWithGoogle =()=> auth.signInWithPopup(provider);\r\n\r\n  export default firebase;\r\n"]},"metadata":{},"sourceType":"module"}