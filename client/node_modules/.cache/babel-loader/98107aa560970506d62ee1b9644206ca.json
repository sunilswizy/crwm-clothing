{"ast":null,"code":"import{FECTCH_COLLECTION}from\"./shop.types\";import{firestore}from\"../../firebase/firebase.utill\";import{convertCollectionSnapshotToMap}from\"../../firebase/firebase.utill\";var fetchCollectionRequest=function fetchCollectionRequest(){return{type:FECTCH_COLLECTION.FETCH_COLLECTIONS_REQUEST};};var fetchCollectionSuccess=function fetchCollectionSuccess(collection){return{type:FECTCH_COLLECTION.FETCH_COLLECTION_SUCCESS,payload:collection};};var fetchCollectionFailure=function fetchCollectionFailure(errMsg){return{type:FECTCH_COLLECTION.FETCH_COLLECTION_FAILURE,payload:errMsg};};var fetchCollectionsAsync=function fetchCollectionsAsync(){return function(dispatch){var colletionRef=firestore.collection('collections');dispatch(fetchCollectionRequest());colletionRef.get().then(function(snapShot){var collectionMap=convertCollectionSnapshotToMap(snapShot);dispatch(fetchCollectionSuccess(collectionMap));}).catch(function(errMsg){dispatch(fetchCollectionFailure(errMsg));});};};export default fetchCollectionsAsync;","map":{"version":3,"sources":["E:/react/Crow Clothing/crwn-clothing/client/src/redux/shop/shop.actions.js"],"names":["FECTCH_COLLECTION","firestore","convertCollectionSnapshotToMap","fetchCollectionRequest","type","FETCH_COLLECTIONS_REQUEST","fetchCollectionSuccess","collection","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionFailure","errMsg","FETCH_COLLECTION_FAILURE","fetchCollectionsAsync","dispatch","colletionRef","get","then","snapShot","collectionMap","catch"],"mappings":"AAAA,OAASA,iBAAT,KAAkC,cAAlC,CAEA,OAASC,SAAT,KAA0B,+BAA1B,CACA,OAASC,8BAAT,KAA+C,+BAA/C,CAGA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,SAAO,CAC9BC,IAAI,CAAGJ,iBAAiB,CAACK,yBADK,CAAP,EAA/B,CAIA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,UAAD,QAAiB,CACxCH,IAAI,CAAEJ,iBAAiB,CAACQ,wBADgB,CAExCC,OAAO,CAAEF,UAF+B,CAAjB,EAA/B,CAKA,GAAMG,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,MAAD,QAAa,CACpCP,IAAI,CAAEJ,iBAAiB,CAACY,wBADY,CAEpCH,OAAO,CAAEE,MAF2B,CAAb,EAA/B,CAMA,GAAME,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAC5B,MAAO,UAAAC,QAAQ,CAAI,CAEnB,GAAMC,CAAAA,YAAY,CAAGd,SAAS,CAACM,UAAV,CAAqB,aAArB,CAArB,CACAO,QAAQ,CAACX,sBAAsB,EAAvB,CAAR,CAGAY,YAAY,CAACC,GAAb,GAAmBC,IAAnB,CACI,SAAAC,QAAQ,CAAI,CACR,GAAMC,CAAAA,aAAa,CAAGjB,8BAA8B,CAACgB,QAAD,CAApD,CACCJ,QAAQ,CAACR,sBAAsB,CAACa,aAAD,CAAvB,CAAR,CACJ,CAJL,EAKEC,KALF,CAKS,SAAAT,MAAM,CAAI,CACVG,QAAQ,CAACJ,sBAAsB,CAACC,MAAD,CAAvB,CAAR,CACP,CAPF,EAQC,CAdD,CAeP,CAhBD,CAoBA,cAAeE,CAAAA,qBAAf","sourcesContent":["import { FECTCH_COLLECTION } from \"./shop.types\"\r\n\r\nimport { firestore } from \"../../firebase/firebase.utill\"\r\nimport { convertCollectionSnapshotToMap } from \"../../firebase/firebase.utill\"\r\n\r\n\r\nconst fetchCollectionRequest = () => ({\r\n        type : FECTCH_COLLECTION.FETCH_COLLECTIONS_REQUEST\r\n})\r\n\r\nconst fetchCollectionSuccess = (collection) => ({\r\n        type: FECTCH_COLLECTION.FETCH_COLLECTION_SUCCESS,\r\n        payload: collection\r\n})\r\n\r\nconst fetchCollectionFailure = (errMsg) => ({\r\n        type: FECTCH_COLLECTION.FETCH_COLLECTION_FAILURE,\r\n        payload: errMsg\r\n})\r\n\r\n\r\nconst fetchCollectionsAsync = () => {\r\n        return dispatch => {\r\n\r\n        const colletionRef = firestore.collection('collections')\r\n        dispatch(fetchCollectionRequest())\r\n\r\n\r\n        colletionRef.get().then(\r\n            snapShot => {\r\n                const collectionMap = convertCollectionSnapshotToMap(snapShot)\r\n                 dispatch(fetchCollectionSuccess(collectionMap)) \r\n            })\r\n         .catch( errMsg => {\r\n                 dispatch(fetchCollectionFailure(errMsg))\r\n         })      \r\n        }\r\n} \r\n\r\n\r\n\r\nexport default fetchCollectionsAsync"]},"metadata":{},"sourceType":"module"}