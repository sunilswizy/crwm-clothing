{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\Crow Clothing\\\\crwn-clothing\\\\src\\\\components\\\\shop-list\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionsPage from '../../pages/collections/collections.component';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utill';\nimport { connect } from 'react-redux';\nimport updateCollection from '../../redux/shop/shop.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unSubscribeFromShapshop = null;\n  }\n\n  componentDidMount() {\n    const colletionRef = firestore.collection('colletions');\n    colletionRef.onSnapshot(async snapShot => {\n      convertCollectionSnapshotToMap(snapShot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-list\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionsPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispach => ({\n  updateCollection: dispatch => updateCollection(mapDispatchToProps)\n});\n\nexport default connect(null)(ShopPage);","map":{"version":3,"sources":["E:/react/Crow Clothing/crwn-clothing/src/components/shop-list/shop.component.jsx"],"names":["React","Route","CollectionsOverview","CollectionsPage","firestore","convertCollectionSnapshotToMap","connect","updateCollection","ShopPage","Component","unSubscribeFromShapshop","componentDidMount","colletionRef","collection","onSnapshot","snapShot","render","match","props","path","mapDispatchToProps","dispach","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,eAAP,MAA4B,+CAA5B;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCC,uBADkC,GACR,IADQ;AAAA;;AAGlCC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,YAAY,GAAGR,SAAS,CAACS,UAAV,CAAqB,YAArB,CAArB;AAEAD,IAAAA,YAAY,CAACE,UAAb,CAAwB,MAAMC,QAAN,IAAkB;AACtCV,MAAAA,8BAA8B,CAACU,QAAD,CAA9B;AACH,KAFD;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB;AACJ,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEjB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEe,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,SAAS,EAAEhB;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAKE;;AAlBgC;;AAqBtC,MAAMiB,kBAAkB,GAAGC,OAAO,KAAK;AACnCd,EAAAA,gBAAgB,EAAEe,QAAQ,IAAIf,gBAAgB,CAACa,kBAAD;AADX,CAAL,CAAlC;;AAIA,eAAed,OAAO,CAAC,IAAD,CAAP,CAAcE,QAAd,CAAf","sourcesContent":["import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionsPage from '../../pages/collections/collections.component';\r\n\r\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utill';\r\n\r\nimport { connect } from 'react-redux';\r\nimport updateCollection from '../../redux/shop/shop.actions';\r\n\r\nclass ShopPage extends React.Component{\r\n    unSubscribeFromShapshop = null;\r\n\r\n    componentDidMount(){\r\n        const colletionRef = firestore.collection('colletions')\r\n\r\n        colletionRef.onSnapshot(async snapShot => {\r\n            convertCollectionSnapshotToMap(snapShot)\r\n        })\r\n    }\r\n\r\n    render(){ \r\n        const {match} = this.props\r\n    return(\r\n    <div className=\"shop-list\">\r\n        <Route exact path={`${match.path}`} component={CollectionsOverview}/>\r\n        <Route path={`${match.path}/:collectionId`} component={CollectionsPage}/>\r\n    </div>\r\n    )}\r\n}\r\n\r\nconst mapDispatchToProps = dispach => ({\r\n    updateCollection: dispatch => updateCollection(mapDispatchToProps)\r\n})\r\n\r\nexport default connect(null)(ShopPage)"]},"metadata":{},"sourceType":"module"}