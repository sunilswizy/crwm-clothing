{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\Crow Clothing\\\\crwn-clothing\\\\src\\\\pages\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../../components/form-input/form-input.component';\nimport Custombtn from '../../components/custom-btn/custom-btn.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utill';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const {\n    userCredentials,\n    setCredentials\n  } = useState({\n    email: '',\n    password: ''\n  });\n\n  const handlesubmit = async e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = userCredentials;\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password); //checking in database for this email and password\n\n      this.setState({\n        email: '',\n        password: ''\n      });\n    } catch (error) {\n      console.log(\"Error in sign in \" + error);\n    }\n  };\n\n  const handlechange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({\n      [name]: value\n    });\n  };\n\n  const {\n    email,\n    password\n  } = userCredentials;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title-head\",\n      children: \"I already have an account!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handlesubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        value: email,\n        handlechange: handlechange,\n        name: \"email\",\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        value: password,\n        handlechange: handlechange,\n        name: \"password\",\n        label: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(Custombtn, {\n          type: \"submit\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Custombtn, {\n          type: \"button\",\n          onClick: signInWithGoogle,\n          googlesign: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"1BVeAqEeTSIoWYeGqyfuH3F5gqc=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["E:/react/Crow Clothing/crwn-clothing/src/pages/sign-in/sign-in.component.jsx"],"names":["React","FormInput","Custombtn","auth","signInWithGoogle","useState","SignIn","userCredentials","setCredentials","email","password","handlesubmit","e","preventDefault","signInWithEmailAndPassword","setState","error","console","log","handlechange","name","value","target"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAAQC,IAAR,EAAcC,gBAAd,QAAqC,+BAArC;AAEA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAM;AAACC,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,MAAoCH,QAAQ,CAAC;AAACI,IAAAA,KAAK,EAAC,EAAP;AAAUC,IAAAA,QAAQ,EAAC;AAAnB,GAAD,CAAlD;;AAED,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAW;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACD,UAAM;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAoBH,eAA1B;;AAEA,QAAG;AACF,YAAMJ,IAAI,CAACW,0BAAL,CAAgCL,KAAhC,EAAuCC,QAAvC,CAAN,CADE,CACsD;;AACxD,WAAKK,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAC,EAAP;AAAUC,QAAAA,QAAQ,EAAC;AAAnB,OAAd;AAEA,KAJD,CAMA,OAAMM,KAAN,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAoBF,KAAhC;AACH;AAEJ,GAdF;;AAgBA,QAAMG,YAAY,GAAEP,CAAD,IAAK;AACnB,UAAM;AAACQ,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAaT,CAAC,CAACU,MAArB;AAEAd,IAAAA,cAAc,CAAC;AAAC,OAACY,IAAD,GAAOC;AAAR,KAAD,CAAd;AACH,GAJF;;AAMC,QAAM;AAACZ,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBH,eAA1B;AAEI,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGA;AAAM,MAAA,QAAQ,EAAE,KAAKI,YAArB;AAAA,8BACI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,OADL;AAEA,QAAA,KAAK,EAAEF,KAFP;AAGA,QAAA,YAAY,EAAEU,YAHd;AAIA,QAAA,IAAI,EAAC,OAJL;AAKA,QAAA,KAAK,EAAC;AALN;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,UADL;AAEA,QAAA,KAAK,EAAET,QAFP;AAGA,QAAA,YAAY,EAAES,YAHd;AAIA,QAAA,IAAI,EAAC,UAJL;AAKA,QAAA,KAAK,EAAC;AALN;AAAA;AAAA;AAAA;AAAA,cARJ,eAcI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACA,QAAC,SAAD;AAAW,UAAA,IAAI,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,SAAD;AAAW,UAAA,IAAI,EAAC,QAAhB;AAAyB,UAAA,OAAO,EAAEf,gBAAlC;AAAoD,UAAA,UAAU,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CArDL;;GAAME,M;;KAAAA,M;AAwDN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport './sign-in.styles.scss'\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport Custombtn from '../../components/custom-btn/custom-btn.component';\r\nimport {auth, signInWithGoogle} from '../../firebase/firebase.utill';\r\n\r\nimport { useState } from 'react';\r\n\r\nconst SignIn = () => {\r\n  \r\n    const {userCredentials, setCredentials} = useState({email:'',password:''})\r\n\r\n   const handlesubmit = async (e)=>{\r\n         e.preventDefault();\r\n        const {email, password} = userCredentials\r\n\r\n        try{\r\n         await auth.signInWithEmailAndPassword(email, password); //checking in database for this email and password\r\n         this.setState({email:'',password:''})\r\n\r\n        }\r\n\r\n        catch(error){\r\n            console.log(\"Error in sign in \"+error)\r\n        }\r\n\r\n    }\r\n\r\n   const handlechange=(e)=>{\r\n        const {name,value}=e.target;\r\n\r\n        setCredentials({[name]:value})\r\n    }\r\n\r\n    const {email, password} = userCredentials\r\n\r\n        return(\r\n            <div className=\"sign-in\">\r\n                <h2 className=\"title-head\">I already have an account!</h2>\r\n                <span>sign in with your email and password</span>\r\n            <form onSubmit={this.handlesubmit}>\r\n                <FormInput \r\n                type=\"email\" \r\n                value={email} \r\n                handlechange={handlechange} \r\n                name=\"email\"\r\n                label=\"Email\"/>\r\n\r\n                <FormInput \r\n                type=\"password\" \r\n                value={password}  \r\n                handlechange={handlechange} \r\n                name=\"password\"\r\n                label=\"Password\"/>\r\n                <div className=\"btn-group\">\r\n                <Custombtn type=\"submit\">Sign in</Custombtn>\r\n                <Custombtn type=\"button\" onClick={signInWithGoogle} googlesign>Sign in with Google</Custombtn>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}