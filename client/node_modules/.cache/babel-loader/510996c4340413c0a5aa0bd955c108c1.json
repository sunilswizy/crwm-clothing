{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBcpWxqkvH2By2x-AadqANXHX7uDkY6FNU\",\n  authDomain: \"crwn-clothing-93193.firebaseapp.com\",\n  projectId: \"crwn-clothing-93193\",\n  storageBucket: \"crwn-clothing-93193.appspot.com\",\n  messagingSenderId: \"99688462988\",\n  appId: \"1:99688462988:web:abaadddf8df345ebd1d9a9\",\n  measurementId: \"G-5VQG2TMBXY\"\n};\nexport const createUserProfileDocument = async (userAuth, additionaldata) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get(); // if user doest exits create a user\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = userAuth;\n    const createdat = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdat,\n        photoURL,\n        ...additionaldata\n      });\n    } catch (error) {\n      console.log(\"Error creating user \" + error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionSnapshotToMap = collection => {\n  const transformedCollection = collection.docs.map(doc => {\n    const {\n      items,\n      title\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n}); //google sign popup\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["E:/react/Crow Clothing/crwn-clothing/src/firebase/firebase.utill.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionaldata","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","photoURL","createdat","Date","set","error","console","log","message","initializeApp","auth","addCollectionAndDocuments","collectionKey","objectToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionSnapshotToMap","transformedCollection","docs","map","items","title","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyBcpWxqkvH2By2x-AadqANXHX7uDkY6FNU\",\r\n    authDomain: \"crwn-clothing-93193.firebaseapp.com\",\r\n    projectId: \"crwn-clothing-93193\",\r\n    storageBucket: \"crwn-clothing-93193.appspot.com\",\r\n    messagingSenderId: \"99688462988\",\r\n    appId: \"1:99688462988:web:abaadddf8df345ebd1d9a9\",\r\n    measurementId: \"G-5VQG2TMBXY\"\r\n  };\r\n\r\n\r\n  export const createUserProfileDocument = async (userAuth, additionaldata)=>{\r\n      if(!userAuth) return;\r\n\r\n      const userRef =  firestore.doc(`users/${userAuth.uid}`)\r\n\r\n      const snapShot = await userRef.get();\r\n\r\n      // if user doest exits create a user\r\n\r\n      if(!snapShot.exists){\r\n        const {displayName, email, photoURL} = userAuth;\r\n        const createdat = new Date();\r\n\r\n        try{\r\n          await userRef.set({\r\n            displayName,\r\n            email,\r\n            createdat,\r\n            photoURL,\r\n            ...additionaldata\r\n          })\r\n            \r\n        }\r\n        catch(error){\r\n            console.log(\"Error creating user \"+error.message)\r\n        }\r\n      }\r\n      return userRef;\r\n  }\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  export const addCollectionAndDocuments =async (collectionKey, objectToAdd) =>{\r\n    const collectionRef = firestore.collection(collectionKey)\r\n    const batch = firestore.batch()\r\n\r\n    objectToAdd.forEach(obj => {\r\n      const newDocRef = collectionRef.doc();\r\n      batch.set(newDocRef, obj)\r\n    })\r\n\r\n    return await batch.commit()\r\n  }  \r\n\r\n  export const convertCollectionSnapshotToMap = collection =>{\r\n      const transformedCollection = collection.docs.map( doc => {\r\n          const {items, title} = doc.data()\r\n\r\n          return{\r\n            routeName: encodeURI(title.toLowerCase()),\r\n            id: doc.id,\r\n            title,\r\n            items\r\n          }\r\n      })\r\n      return transformedCollection.reduce((accumulator, collection) =>{\r\n        accumulator[collection.title.toLowerCase()] = collection;\r\n        return accumulator;\r\n      }, {})\r\n  }\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt: 'select_account' }); //google sign popup\r\n  export const signInWithGoogle =()=> auth.signInWithPopup(provider);\r\n\r\n  export default firebase;\r\n"]},"metadata":{},"sourceType":"module"}